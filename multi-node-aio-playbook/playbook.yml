---
- hosts: all

  vars_files:
    - vars.yml

  tasks:
    - name: Generate ssh key if not exist
      user:
        name: root
        generate_ssh_key: yes
        ssh_key_type: rsa
        ssh_key_file: /root/.ssh/id_rsa

    - name: Set authorized key took from file
      authorized_key:
        user: root
        state: absent
        key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"

    - name: Install basic packages known to be needed
      apt:
        name: "{{ item }}"
        update_cache: yes
        state: latest
      with_items:
        - bridge-utils
        - ifenslave
        - libvirt-bin
        - lvm2
        - openssh-server
        - python2.7
        - qemu-kvm
        - vim
        - virtinst
        - virt-manager
        - vlan
        - iptables-persistent

    - name: include interfaces.d files
      lineinfile:
        dest: /etc/network/interfaces
        regexp: '^source.*cfg$'
        line: 'source /etc/network/interfaces.d/*.cfg'

    - name: set kvm bridge network address
      template:
        src: templates/kvm-bonded-bridges.cfg.j2
        dest: /etc/network/interfaces.d/kvm-bridges.cfg

    - name: bringup all kvm interfaces
      shell: >
        for i in $(awk '/iface/ {print $2}' /etc/network/interfaces.d/kvm-bridges.cfg); do
          ifup $i
        done

    - name: Clean up stale NTP processes.
      shell: >
        pkill lockfile-create || true

    - name: Set the forward rule
      lineinfile:
        dest: /etc/sysctl.conf
        regexp: '^net.ipv4.ip_forward'
        line: 'sysctl -w net.ipv4.ip_forward=1'

    - name: Set up default filter iptables
      iptables_raw:
        name: default_filter_rules
        rules: "{{ default_filter_rules }}"

    - name: Set up nat iptables
      iptables_raw:
        name: nat_rules
        table: nat
        rules: "{{ nat_rules }}"

    - name: Set up default fileter iptables
      iptables_raw:
        name: mangle_rules
        table: mangle
        rules: "{{ mangle_rules }}"

    - name: Override the sources.list
      copy:
        src: templates/sources.list.j2
        dest: /etc/apt/sources.list
        owner: root
        group: root
        mode: 0644
      when:
        - override_sources
        - ubuntu_release == "trusty"

    - name: Allow apt repos to be UnAuthenticated
      copy:
        content: 'APT { Get { AllowUnauthenticated "1"; }; };'
        dest: /etc/apt/apt.conf.d/00-nokey
        force: yes
        group: root
        owner: root
        mode: 0644

